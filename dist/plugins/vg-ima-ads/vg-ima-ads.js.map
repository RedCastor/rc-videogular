{"version":3,"sources":["vg-ima-ads.js"],"names":["angular","module","directive","$window","VG_STATES","restrict","require","scope","vgNetwork","vgUnitPath","vgCompanion","vgCompanionSize","vgAdTagUrl","vgSkipButton","link","elem","attr","API","adDisplayContainer","google","ima","AdDisplayContainer","adsLoader","AdsLoader","adsManager","adsLoaded","w","h","onContentEnded","contentComplete","currentAd","skipButton","element","onPlayerReady","isReady","mediaElement","addEventListener","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","this","AdErrorEvent","AD_ERROR","onAdError","loadAds","onUpdateAds","newVal","oldVal","pause","initialize","requestAds","googletag","cmd","push","defineSlot","addService","companionAds","pubads","setRefreshUnfilledSlots","enableVideoAds","enableServices","onUpdateState","newState","PLAY","STOP","adTagUrl","show","adsRequest","AdsRequest","computedStyle","getComputedStyle","linearAdSlotWidth","parseInt","width","linearAdSlotHeight","height","nonLinearAdSlotWidth","nonLinearAdSlotHeight","adsManagerLoadedEvent","getAdsManager","processAdsManager","videogularElement","offsetWidth","offsetHeight","AdEvent","CONTENT_PAUSE_REQUESTED","onContentPauseRequested","CONTENT_RESUME_REQUESTED","onContentResumeRequested","SKIPPABLE_STATE_CHANGED","onSkippableStateChanged","ALL_ADS_COMPLETED","onAllAdsComplete","COMPLETE","onAdComplete","init","ViewMode","NORMAL","start","isSkippable","getAdSkippableState","css","onClickSkip","skip","removeEventListener","play","hide","destroy","getCuePoints","join","indexOf","stop","bind","prepend","isFullScreen","resize","FULLSCREEN","isConfig","$watch","config","plugins","network","unitPath","companion","companionSize","currentState"],"mappings":"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","file":"vg-ima-ads.js","sourcesContent":["/**\n * @license videogular v1.4.4 http://videogular.com\n * Two Fucking Developers http://twofuckingdevelopers.com\n * License: MIT\n */\n/**\n * @ngdoc directive\n * @name com.2fdevs.videogular.plugins.imaads.directive:vgImaAds\n * @restrict E\n * @description\n * Directive to show Google Interactive Media Ads.\n *\n * @param {string} vgNetwork Your network name.\n * @param {string} vgUnitPath Target unit path.\n * @param {string} vgCompanion Companion name.\n * @param {array} vgCompanionSize Companion size as an array like [width, height].\n * @param {string} vgAdTagUrl Ad tag url, usually a link to the VAST file provided by DoubleClick.\n * @param {string} vgSkipButton Custom skip button HTML like &lt;div class='skipButton'&gt;skip ad&lt;/div&gt;.\n *\n */\n\"use strict\";\nangular.module(\"com.2fdevs.videogular.plugins.imaads\", [])\n    .directive(\n    \"vgImaAds\",\n    [\"$window\", \"VG_STATES\", function ($window, VG_STATES) {\n        return {\n            restrict: \"E\",\n            require: \"^videogular\",\n            scope: {\n                vgNetwork: \"=?\",\n                vgUnitPath: \"=?\",\n                vgCompanion: \"=?\",\n                vgCompanionSize: \"=?\",\n                vgAdTagUrl: \"=?\",\n                vgSkipButton: \"=?\"\n            },\n            link: function (scope, elem, attr, API) {\n                var adDisplayContainer = new google.ima.AdDisplayContainer(elem[0]);\n                var adsLoader = new google.ima.AdsLoader(adDisplayContainer);\n                var adsManager = null;\n                var adsLoaded = false;\n                var w;\n                var h;\n                var onContentEnded = function () {\n                    adsLoader.contentComplete();\n                };\n                var currentAd = 0;\n                var skipButton = angular.element(scope.vgSkipButton);\n\n                scope.API = API;\n\n                scope.onPlayerReady = function onPlayerReady(isReady) {\n                    if (isReady) {\n                        API.mediaElement[0].addEventListener('ended', onContentEnded);\n\n                        adsLoader.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, scope.onAdsManagerLoaded, false, this);\n                        adsLoader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, scope.onAdError, false, this);\n\n                        scope.loadAds();\n                    }\n                };\n\n                scope.onUpdateAds = function onUpdateAds(newVal, oldVal) {\n                    if (newVal !== oldVal) {\n                        scope.loadAds();\n                        API.pause();\n                        adDisplayContainer.initialize();\n                        scope.requestAds(scope.vgAdTagUrl);\n                    }\n                };\n\n                scope.loadAds = function loadAds() {\n                    if (scope.vgCompanion) {\n                        googletag.cmd.push(\n                            function () {\n                                googletag.defineSlot(\"/\" + scope.vgNetwork + \"/\" + scope.vgUnitPath, scope.vgCompanionSize, scope.vgCompanion)\n                                    .addService(googletag.companionAds())\n                                    .addService(googletag.pubads());\n                                googletag.companionAds().setRefreshUnfilledSlots(true);\n                                googletag.pubads().enableVideoAds();\n                                googletag.enableServices();\n                            }\n                        );\n                    }\n                };\n\n                scope.onUpdateState = function onUpdateState(newState) {\n                    switch (newState) {\n                        case VG_STATES.PLAY:\n                            if (!adsLoaded) {\n                                API.pause();\n                                adDisplayContainer.initialize();\n                                scope.requestAds(scope.vgAdTagUrl);\n                                adsLoaded = true;\n                            }\n                            break;\n\n                        case VG_STATES.STOP:\n                            adsLoader.contentComplete();\n                            break;\n                    }\n                };\n\n                scope.requestAds = function requestAds(adTagUrl) {\n                    // Show only to get computed style in pixels\n                    scope.show();\n\n                    var adsRequest = new google.ima.AdsRequest();\n                    var computedStyle = $window.getComputedStyle(elem[0]);\n                    adsRequest.adTagUrl = adTagUrl;\n\n                    adsRequest.linearAdSlotWidth = parseInt(computedStyle.width, 10);\n                    adsRequest.linearAdSlotHeight = parseInt(computedStyle.height, 10);\n                    adsRequest.nonLinearAdSlotWidth = parseInt(computedStyle.width, 10);\n                    adsRequest.nonLinearAdSlotHeight = parseInt(computedStyle.height, 10);\n\n                    adsLoader.requestAds(adsRequest);\n                };\n\n                scope.onAdsManagerLoaded = function onAdsManagerLoaded(adsManagerLoadedEvent) {\n                    scope.show();\n                    adsManager = adsManagerLoadedEvent.getAdsManager(API.mediaElement[0]);\n\n                    scope.processAdsManager(adsManager);\n                };\n\n                scope.processAdsManager = function processAdsManager(adsManager) {\n                    w = API.videogularElement[0].offsetWidth;\n                    h = API.videogularElement[0].offsetHeight;\n\n                    // Attach the pause/resume events.\n                    adsManager.addEventListener(google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED, scope.onContentPauseRequested, false, this);\n                    adsManager.addEventListener(google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED, scope.onContentResumeRequested, false, this);\n                    adsManager.addEventListener(google.ima.AdEvent.Type.SKIPPABLE_STATE_CHANGED, scope.onSkippableStateChanged, false, this);\n                    adsManager.addEventListener(google.ima.AdEvent.Type.ALL_ADS_COMPLETED, scope.onAllAdsComplete, false, this);\n                    adsManager.addEventListener(google.ima.AdEvent.Type.COMPLETE, scope.onAdComplete, false, this);\n                    adsManager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, scope.onAdError, false, this);\n\n                    adsManager.init(w, h, google.ima.ViewMode.NORMAL);\n                    adsManager.start();\n                };\n\n                scope.onSkippableStateChanged = function onSkippableStateChanged() {\n                    var isSkippable = adsManager.getAdSkippableState();\n\n                    if (isSkippable) {\n                        skipButton.css(\"display\", \"block\");\n                    }\n                    else {\n                        skipButton.css(\"display\", \"none\");\n                    }\n                };\n\n                scope.onClickSkip = function onClickSkip() {\n                    adsManager.skip();\n                };\n\n                scope.onContentPauseRequested = function onContentPauseRequested() {\n                    scope.show();\n                    API.mediaElement[0].removeEventListener('ended', onContentEnded);\n                    API.pause();\n                };\n\n                scope.onContentResumeRequested = function onContentResumeRequested() {\n                    API.mediaElement[0].addEventListener('ended', onContentEnded);\n\n                    API.play();\n                    scope.hide();\n                };\n\n                scope.onAdError = function onAdError() {\n                    if (adsManager) {\n                        adsManager.destroy();\n                    }\n                    scope.hide();\n                    API.play();\n                };\n\n                scope.onAllAdsComplete = function onAllAdsComplete() {\n                    scope.hide();\n\n                    // The last ad was a post-roll\n                    if (adsManager.getCuePoints().join().indexOf(\"-1\") >= 0) {\n                        API.stop();\n                    }\n                };\n\n                scope.onAdComplete = function onAdComplete() {\n                    // TODO: Update view with current ad count\n                    currentAd++;\n                };\n\n                scope.show = function show() {\n                    elem.css(\"display\", \"block\");\n                };\n\n                scope.hide = function hide() {\n                    elem.css(\"display\", \"none\");\n                };\n\n                skipButton.bind(\"click\", scope.onClickSkip);\n\n                elem.prepend(skipButton);\n\n                angular.element($window).bind(\"resize\", function () {\n                    w = API.videogularElement[0].offsetWidth;\n                    h = API.videogularElement[0].offsetHeight;\n\n                    if (adsManager) {\n                        if (API.isFullScreen) {\n                            adsManager.resize(w, h, google.ima.ViewMode.FULLSCREEN);\n                        }\n                        else {\n                            adsManager.resize(w, h, google.ima.ViewMode.NORMAL);\n                        }\n                    }\n                });\n\n                if (API.isConfig) {\n                    scope.$watch(\"API.config\",\n                        function () {\n                            if (scope.API.config) {\n                                scope.vgNetwork = scope.API.config.plugins[\"ima-ads\"].network;\n                                scope.vgUnitPath = scope.API.config.plugins[\"ima-ads\"].unitPath;\n                                scope.vgCompanion = scope.API.config.plugins[\"ima-ads\"].companion;\n                                scope.vgCompanionSize = scope.API.config.plugins[\"ima-ads\"].companionSize;\n                                scope.vgAdTagUrl = scope.API.config.plugins[\"ima-ads\"].adTagUrl;\n                                scope.vgSkipButton = scope.API.config.plugins[\"ima-ads\"].skipButton;\n\n                                scope.onPlayerReady(true);\n                            }\n                        }\n                    );\n                }\n                else {\n                    scope.$watch(\"vgAdTagUrl\", scope.onUpdateAds.bind(scope));\n                }\n\n                scope.$watch(\n                    function () {\n                        return API.isReady;\n                    },\n                    function (newVal, oldVal) {\n                        if (API.isReady === true || newVal !== oldVal) {\n                            scope.onPlayerReady(newVal);\n                        }\n                    }\n                );\n\n                scope.$watch(\n                    function () {\n                        return API.currentState;\n                    },\n                    function (newVal, oldVal) {\n                        if (newVal !== oldVal) {\n                            scope.onUpdateState(newVal);\n                        }\n                    }\n                );\n            }\n        };\n    }]\n);\n"],"sourceRoot":"scripts/"}